##---------------------------------------------------------------------------
### Punto 5
## Distribucion de Poisson
dpois(3,0.93)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 3:15
prob=binom(intervaloX,15,0.4)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 3:15
prob=binom(intervaloX,15,0.4)
plot(x,prob,type="h", col="red", lwd=3)
## Implemetacion con R,ya viene implementado
dbinom(3,15,0.4) ## p(X=x)
## P(x>=3) = 1 - P(x<3)
answer<- 1 - (binom(0,15,0.4)+ binom(1,15,0.4) + binom(2,15,0.4))
answer
## Otra forma usando funciones de R
pbinom(2,15,0.4,lower.tail=F) ## P(x>=3)
##---------------------------------------------------------------------------
### Punto 5
## Distribucion de Poisson
dpois(3,0.93)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 3:15
prob=binom(intervaloX,15,0.4)
plot(x,prob,type="h", col="red", lwd=3)
## Implemetacion con R,ya viene implementado
dbinom(3,15,0.4) ## p(X=x)
## P(x>=3) = 1 - P(x<3)
answer<- 1 - (binom(0,15,0.4)+ binom(1,15,0.4) + binom(2,15,0.4))
answer
## Otra forma usando funciones de R
pbinom(2,15,0.4,lower.tail=F) ## P(x>=3)
##---------------------------------------------------------------------------
### Punto 5
## Distribucion de Poisson
dpois(3,0.93)
## Funcion poisson
poisson = function(x,lambda){
prob=(exp(lambda)*(lamda)^(x))/factorial(x)
return(prob)
}
poisson(3,0.93)
## Funcion poisson
poisson = function(x,lambda){
prob=(exp(lambda)*(lambda)^(x))/factorial(x)
return(prob)
}
poisson(3,0.93)
## Distribucion de Poisson por default en R
dpois(3,0.93)
## Funcion poisson
poisson = function(x,lambda){
prob=(exp(lambda)*((lambda)^(x)))/factorial(x)
return(prob)
}
poisson(3,0.93)
factorial(3)
## Funcion poisson
poisson = function(x,lambda){
prob=(exp(-lambda)*((lambda)^(x)))/factorial(x)
return(prob)
}
poisson(3,0.93)
## Distribucion de Poisson por default en R
dpois(3,0.93)
## Grafica
## Grafica
intervaloXPoisson= 0:5
prob=poisson(intervaloXPoisson,0.93)
plot(x,prob,type="h", col="red", lwd=3)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 3:15
prob=binom(intervaloX,15,0.4)
plot(x,prob,type="h", col="red", lwd=3)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 2:15
prob=binom(intervaloX,15,0.4)
plot(x,prob,type="h", col="red", lwd=3)
## Grafica
intervaloX= 2:10
prob=binom(intervaloX,15,0.4)
plot(x,prob,type="h", col="red", lwd=3)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 2:10
prob=binom(intervaloX,15,0.4)
plot(intervaloX,prob,type="h", col="red", lwd=3)
## Grafica
intervaloX= 2:15
prob=binom(intervaloX,15,0.4)
plot(intervaloX,prob,type="h", col="red", lwd=3)
## Grafica
intervaloXPoisson= 0:5
prob=poisson(intervaloXPoisson,0.93)
plot(intervaloXPoisson,prob,type="h", col="red", lwd=3)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Grafica
intervaloX= 2:15
prob=binom(intervaloX,15,0.4)
plot(intervaloX,prob,type="h", col="red", lwd=3)
## Implemetacion con funcion predefinida de R
dbinom(3,15,0.4) ## p(X=x)
##Grafica
intervalo4c= 0:3
prob4c=binom(intervalo4c,15,0.4)
plot(intervalo4c,prob4c,type="h", col="red", lwd=3)
binom = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binom(3,15,0.4)
## Implemetacion con funcion predefinida de R
dbinom(3,15,0.4) ## p(X=x)
## Grafica
intervalo4a= 2:15
prob=binom(intervalo4a,15,0.4)
plot(intervalo4a,prob,type="h", col="red", lwd=3)
## P(x>=3) = 1 - P(x<3)
answer<- 1 - (binom(0,15,0.4)+ binom(1,15,0.4) + binom(2,15,0.4))
answer
## Implemetacion con funcion predefinida de R
dbinom(3,15,0.4) ## p(X=x)
## Otra forma usando funciones de R
pbinom(2,15,0.4,lower.tail=F) ## P(x>=3)
## P(x>=3) = 1 - P(x<3)
answer<- 1 - (binom(0,15,0.4)+ binom(1,15,0.4) + binom(2,15,0.4))
answer
## Otra forma usando funciones de R
pbinom(2,15,0.4,lower.tail=F) ## P(x>=3)
##Grafica
intervalo4c= 0:3
prob4c=binom(intervalo4c,15,0.4)
plot(intervalo4c,prob4c,type="h", col="red", lwd=3)
## P(x>=3) = 1 - P(x<3)
answer<- 1 - (binom(0,15,0.4)+ binom(1,15,0.4) + binom(2,15,0.4))
answer
## Otra forma usando funciones de R
pbinom(2,15,0.4,lower.tail=F) ## P(x>=3)
##Grafica
intervalo4c= 0:2
prob4c=binom(intervalo4c,15,0.4)
plot(intervalo4c,prob4c,type="h", col="red", lwd=3)
## Funcion poisson
poisson = function(x,lambda){
prob=(exp(-lambda)*((lambda)^(x)))/factorial(x)
return(prob)
}
poisson(3,0.93)
## Distribucion de Poisson por default en R
dpois(3,0.93)
## Grafica
intervaloXPoisson= 0:5
prob=poisson(intervaloXPoisson,0.93)
plot(intervaloXPoisson,prob,type="h", col="red", lwd=3)
# 1/2 hora = 30 minutos
# Nos piden P(X > x) = P(X>30)
pnorm(30,24,3.8,FALSE)
# 1/2 hora = 30 minutos
# Nos piden P(X > x) = P(X>30)
# media (μ) = 24
# Desviacion estandar (σ)= 3.8
# Funcion en R
# pnorm gives the distribution function
# lower.tail = FALSE porque estoy buscando valores mayores a 30 minutos
pnorm(30,mean = 24, sd = 3.8,lower.tail=FALSE)
#valores al azar de la distribución normal
randNorm <- rnorm(30)
#calculo de su densidad
randDensity <- dnorm(randNorm)
#gráfica
library(ggplot2)
ggplot(data.frame(x = randNorm, y = randDensity)) +
aes(x = x, y = y) +
geom_point() +
labs(x = "Random Normal Variable", y = "Densidad")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.6), ylab = "", lwd = 2, col = "red")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.6), ylab = "", lwd = 2, col = "red"
+ main = "Distribucion normal",
+ xlab = "Valores para X", prob = TRUE
+ xlab = "f(x)", prob = TRUE)
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.6), ylab = "", lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X", prob = TRUE,
ylab = "f(x)", prob = TRUE)
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.6), ylab = "", lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.2), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "l",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(fun,x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "s",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "p",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 100, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "p",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
35
35
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "p",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "b",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "g",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "h",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 50, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
35
35
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# 1/2 hora = 30 minutos
# Nos piden P(X > x) = P(X>30)
# media (μ) = 24
# Desviacion estandar (σ)= 3.8
# Funcion en R
# pnorm: Distribución normal (Función de distribución acumulada)
# lower.tail = FALSE porque estoy buscando valores mayores a 30 minutos
pnorm(30,mean = 24, sd = 3.8,lower.tail=FALSE)
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
plot(0,30,type="l")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "red",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
lines(30,0,type="l")
lines(30,0,type="l")
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal",
xlab = "Valores para X",
ylab = "f(x)")
lines(30,0,type="l", col = 2)
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal X∼N(24,3.8)",
xlab = "Valores para X",
ylab = "f(x)")
# Se calcula primero la Función de distribución acumulada
distr_acum = 1 - pnorm (15,24,3.8)
# Se calcula primero la Función de distribución acumulada
distr_acum = 1 - pnorm (15,24,3.8)
# Se calcula primero la Función de distribución acumulada
distr_acum = 1 - pnorm (15,24,3.8)
# Tambien se puede hacer distr_acum = pnorm(15,24,3.8,FALSE)
distr_acum
# Pasandolo a porcentaje
prob_procentaje = distr_acum*100
# Pasandolo a porcentaje
prob_procentaje = distr_acum*100
# Se calcula primero la Función de distribución acumulada
distr_acum = 1 - pnorm (15,24,3.8)
distr_acum
# Pasandolo a porcentaje
prob_procentaje = distr_acum*100
prob_procentaje
# 1/2 hora = 30 minutos
# Nos piden P(X > x) = P(X>30)
# media (μ) = 24
# Desviacion estandar (σ)= 3.8
# Funcion en R
# pnorm: Distribución normal (Función de distribución acumulada)
# lower.tail = FALSE porque estoy buscando valores mayores a 30 minutos
distr_acum1 = pnorm(30,mean = 24, sd = 3.8,lower.tail=FALSE)
distr_acum1
# Pasandolo a porcentaje
prob_procentaje1 = distr_acum1*100
prob_procentaje1
# Grafica de la distribucion normal
# Rejilla de valores para el eje X
x <- seq(10, 35, 5)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal X∼N(24,3.8)",
xlab = "Valores para X",
ylab = "f(x)")
# 1/2 hora = 30 minutos
# Nos piden P(X > x) = P(X>30)
# media (μ) = 24
# Desviacion estandar (σ)= 3.8
# Funcion en R
# pnorm: Distribución normal (Función de distribución acumulada)
# lower.tail = FALSE porque estoy buscando valores mayores a 30 minutos
distr_acum1 = pnorm(30,mean = 24, sd = 3.8,lower.tail=FALSE)
distr_acum1
# Pasandolo a porcentaje
prob_procentaje1 = distr_acum1*100
prob_procentaje1
# Se calcula primero la Función de distribución acumulada
distr_acum = 1 - pnorm (15,24,3.8)
# Se calcula primero la Función de distribución acumulada
distr_acum2 = 1 - pnorm (15,24,3.8)
distr_acum2
# Pasandolo a porcentaje
prob_procentaje2 = distr_acum2*100
prob_procentaje2
# Grafica de la distribucion normal
# Rejilla de valores para el eje X
x <- seq(10, 35, 1)
plot(x, dnorm(x, mean = 24, sd = 3.8), type = "o",
ylim = c(0, 0.125), lwd = 2,lty=3, col = "blue",
main = "Distribucion normal X∼N(24,3.8)",
xlab = "Valores para X",
ylab = "f(x)")
# Se calcula primero la Función de distribución acumulada
distr_acum3 = 1 - pnorm (25,24,3.8)
distr_acum3
# Pasandolo a porcentaje
prob_procentaje3 = distr_acum3*100
prob_procentaje3
# Puesto que se quiere encontrar P(X<=x), ya que el procentaje es
# 15% entonces queremos encontrar el quantil 0.15
qnorm(0.15, 24, 3.8)
# Puesto que se quiere encontrar P(X<=x), ya que el procentaje es
# 15% entonces queremos encontrar el quantil 0.15
qnorm(0.15, 24, 3.8)
# Puesto que se quiere encontrar P(X<=x), ya que el procentaje es
# 15% entonces queremos encontrar el quantil 0.15
qnorm(0.15, 24, 3.8)
distr_acum1 = pnorm(30,mean = 24, sd = 3.8)
pnorm(30,mean = 24, sd = 3.8)
# cargar paquetes
library(readr)
library(here)
library(ggplot2)
# Importar csv
data <-read.csv("FIFA_2018_Statistics.csv")
setwd("D:/univalle/probabilidad/R/Probability_Statistics/RegresionLineal/Tarea")
# cargar paquetes
library(readr)
library(here)
library(ggplot2)
# Importar csv
data <-read.csv("FIFA_2018_Statistics.csv")
#-------------------------------------------------------------------------
#Regresion Lineal Simple
#Para nuestro modelo lineal simple, tomamos:
#Posesion de balon (Ball.Poseesion) : x -> Variable independiente-regresora
#Oportunidades de gol (Atttemps) : y -> Variable dependiente-respuesta
# Modelo Lineal para la posesion de balon y las oportunidades de gol
modLinealSimple = lm(data$Attempts ~ data$Ball.Possession..)
modLinealSimple
summary(modLinealSimple)
modLinealMultiple = lm(data$Attempts ~ data$Ball.Possession..+data$Free.Kicks)
modLinealMultiple
#Graficos
plot(data$Ball.Possession..,data$Attempts,
main = "Ball Possession vs Attempts (Considering free kicks)",
xlab = "Posesión de balón",
ylab = "Oportunidades de Gol",
col = "blue")
abline(modLinealMultiple,col='red')
#Summary
summary(modLinealMultiple)
