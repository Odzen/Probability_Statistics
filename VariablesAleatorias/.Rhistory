## Ejercicio en clase
library(tidyverse)
x <- 1:9
logs<- log10((x+1)/x)
sum(logs)
data <- data.frame(cbind(x,logs))
data %>% ggplot(aes(x=x,y=logs))+
geom_bar(stat = 'identity',fill='lightblue')+
geom_text(label = paste(round(logs*100,2),'%'))+
labs(x='Primer digito',y="probabilidades",title="Ley de Benford")+
theme_light()
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
rbinom(10,1,0.5)
table(random)
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
random=rbinom(10,1,0.5)
table(random)
##Plot
barplot(tablaRandom)
tablaRandom=table(random)
##Plot
barplot(tablaRandom)
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
random=rbinom(100,1,0.5)
tablaRandom=table(random)
##Plot
barplot(tablaRandom)
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
random=rbinom(100,1,0.5)
tablaRandom=table(random)
##Plot
barplot(tablaRandom)
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
##Generar Bernoulli con  diferentes p
##100=muestras
##0.5= probabilidad
random=rbinom(100,1,0.5)
##Media de random es igual a la probabilidad, o aprox
mean(random) ##p
##Varianza
var(random)## p(1-p)
tablaRandom=table(random)
##Plot
barplot(tablaRandom)
##Generar un vector de p
## Calcular v= p*(1-p)
##Graficar p vs v
p= seq(0,1,0.1)
v=p*(1-p)
plot(p,v,type='p', ## plot circles
xlab= 'Probabilidad de exito', ylab='varianza')
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
##Generar Bernoulli con  diferentes p
##100=muestras
##0.5= probabilidad
random=rbinom(100,1,0.5)
##Media de random es igual a la probabilidad, o aprox
mean(random) ##p
##Varianza
var(random)## p(1-p)
tablaRandom=table(random)
##Generar un vector de p
## Calcular v= p*(1-p)
##Graficar p vs v
p= seq(0,1,0.1)
v=p*(1-p)
plot(p,v,type='p', ## plot circles
xlab= 'Probabilidad de exito', ylab='varianza')
plot(p,v,type='p', ## plot circles
xlab= 'Probabilidad de exito', ylab='varianza')
segments(p,0,p,v) ##Lines
##Plot David-------
plot(p,v,type="h", col="royal blue", lwd=3)
##Ejercicio 1
muestra = rbinom(100,10,0.08)
muestra
table(muestras)
##Ejercicio 1
muestra = rbinom(100,10,0.08)
table(muestras)
table(muestra)
##Random con size=1 que me indica que es binomial, y la probabilidad the flip coin
##Generar Bernoulli con  diferentes p
##100=muestras
##0.5= probabilidad
random=rbinom(100,1,0.5)
##Media de random es igual a la probabilidad, o aprox
mean(random) ##p
##Varianza
var(random)## p(1-p)
tablaRandom=table(random)
##Ejercicio 1
muestra = rbinom(100,10,0.08)
install.packages("gtools")
##Ejercicio 1
muestra = rbinom(100,10,0.08)
table(muestra)
binomial = function(x,n,p){
prob=choose(n,x)*p^x*(1-p)^(n-x)
return(prob)
}
binomial(0,10,0.08)
x= 0:10
prob=binomial(x,10,0.08)
prob=binomial(x,10,0.08)
plot(x,prob,type="h", col="royal blue", lwd=3)
## Implemetacion con R
dbinom(0,10,0.08)
pbinom(2,10,0.08)## p(x<=2)
pbinom(2,10,0.08,lower.tail=F) ## p(X>=3)
10*0.8 ## E(X)
10*0.8*0.2 ## V(X)
##Distribucion Poison
rpois(100,2)
##Distribucion Poison
m1 = rpois(100,2.5) ##Numero de lesiones mensuales, 100 meses observados
table(m1)
barplot(table(m1))
dpois(0,2.5)
ppois(0,2.5,lower.tail = F)
par(mfrow=c(2,1))
m1=rpois(10000,2.5)
m2=rpois(10000,5)
x11()
par(mfrow=c(2,1))
barplot(table(m1),xlim= c(0,10))
barplot(table(m2),xlim= c(0,10))
